{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/footer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","a","createContext","StaticQuery","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","header","_ref","siteTitle","react_default","className","gatsby_browser_entry","to","type","layout_Layout","container","b","react","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","_755544856","prop_types_default","node","__webpack_exports__","238","e","t","react__WEBPACK_IMPORTED_MODULE_0__","n","239","r","c","o","i","s","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","l","300","309"],"mappings":"6NAKMA,EAAqBC,EAAAC,EAAMC,kBAE3BC,EAAc,SAAAC,GAAA,OAClBJ,EAAAC,EAAAI,cAACN,EAAmBO,SAApB,KACG,SAAAC,GACC,OACEH,EAAMI,MACLD,EAAgBH,EAAMK,QAAUF,EAAgBH,EAAMK,OAAOD,MAEtDJ,EAAMM,QAAUN,EAAMO,UAC5BP,EAAMI,KAAOJ,EAAMI,KAAKA,KAAOD,EAAgBH,EAAMK,OAAOD,MAGvDR,EAAAC,EAAAI,cAAA,uCAMfF,EAAYS,WACVJ,KAAMK,EAAAZ,EAAUa,OAChBL,MAAOI,EAAAZ,EAAUc,OAAOC,WACxBN,OAAQG,EAAAZ,EAAUgB,KAClBN,SAAUE,EAAAZ,EAAUgB,2BC5BtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAA,OALAH,EAAEI,SAAYJ,4GC0B/CK,EAvBe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAAzB,EAAAI,cAAA,WAASsB,UAAU,yBACjBD,EAAAzB,EAAAI,cAAA,OAAKsB,UAAU,aACbD,EAAAzB,EAAAI,cAAA,MAAIsB,UAAU,qBACZD,EAAAzB,EAAAI,cAACuB,EAAA3B,GAAK4B,GAAG,KAAKJ,IAEhBC,EAAAzB,EAAAI,cAAA,KAAGsB,UAAU,mBAAb,kLAKAD,EAAAzB,EAAAI,cAAA,SACEqB,EAAAzB,EAAAI,cAAA,UAAQyB,KAAK,SAASH,UAAU,wBAAhC,uBAGAD,EAAAzB,EAAAI,cAAA,UAAQyB,KAAK,SAASH,UAAU,0BAAhC,wBCRFI,UAAS,SAAAP,GAAA,IAAGQ,EAAHR,EAAGQ,UAAWrB,EAAda,EAAcb,SAAd,OAAAa,EAAwBhB,KACrCkB,EAAAzB,EAAAI,cAACuB,EAAAK,GACCxB,MAAA,YASAC,OAAQ,SAAAF,GAAA,OACNkB,EAAAzB,EAAAI,cAAC6B,EAAAC,SAAD,KACET,EAAAzB,EAAAI,cAAC+B,EAAAnC,GACCoC,MAAO7B,EAAK8B,KAAKC,aAAaF,MAC9BG,OACIC,KAAM,cAAeC,QAAS,WAC9BD,KAAM,WAAYC,QAAS,wBAGjChB,EAAAzB,EAAAI,cAACkB,GAAOE,UAAWjB,EAAK8B,KAAKC,aAAaF,QAC1CX,EAAAzB,EAAAI,cAAA,OAAKsB,UAAWK,GAAa,IAAKrB,KApBxCH,KAAAmC,MA0BFZ,EAAOnB,WACLD,SAAUiC,EAAA3C,EAAU4C,KAAK7B,YAG3B8B,EAAA7C,EAAAiB,GAAA6B,IAAA,SAAAC,EAAAC,EAAAhD,GAAA,aCzCA,IAAAiD,EAAA7B,EAAA,GAAArB,EAAAqB,EAAA8B,EAAAD,GAWAJ,EAAA7C,EARe,SAAAuB,GAAA,IAAGb,EAAHa,EAAGb,SAAH,OACbX,EAAAC,EAAAI,cAAA,UAAQsB,UAAU,6BAChB3B,EAAAC,EAAAI,cAAA,OAAKsB,UAAU,wCACZhB,GAAYX,EAAAC,EAAAI,cAAA,KAAGsB,UAAU,aAAb,0BAAAyB,IAAA,SAAAJ,EAAAC,EAAAhD,GAAA,aAAAA,EAAAoD,EAAAJ,GAAA,IAAAE,EAAAlD,EAAA,GAAAoD,EAAApD,EAAAkD,KAAAG,EAAArD,EAAA,GAAAsD,EAAAtD,EAAAkD,EAAAG,GAAAE,EAAAvD,EAAA,IAAAwD,EAAAxD,EAAA,GCAbyD,EAAmB,SAAAlC,GAAkB,IAAfmC,EAAenC,EAAfmC,SACpBC,EAAgBC,EAAA5D,EAAO6D,wBAAwBH,EAASI,UAC9D,OAAO/D,EAAAC,EAAMI,cAAc2D,EAAA/D,GACzB0D,WACAC,mBAIJF,EAAiB9C,WACf+C,SAAU9C,EAAAZ,EAAUgE,OAClBF,SAAUlD,EAAAZ,EAAUc,OAAOC,aAC1BA,YAGL8B,EAAAxB,QAAA4C,GAAAC,IAAA,SAAAnB,EAAAC,EAAAhD,KAAAmE,IAAA,SAAApB,KAAA5B,SAAAZ,MAAA8B,MAAAC,cAAAF,MAAA","file":"0-768a1080d7b5480ba74b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <section className='jumbotron text-center'>\n    <div className='container'>\n      <h1 className='jumbotron-heading'>\n        <Link to='/'>{siteTitle}</Link>\n      </h1>\n      <p className='lead text-muted'>\n        Something short and leading about the collection belowâ€”its contents, the\n        creator, etc. Make it short and sweet, but not too short so folks don't\n        simply skip over it entirely.\n      </p>\n      <p>\n        <button type='button' className='btn btn-primary my-2'>\n          Main call to action\n        </button>\n        <button type='button' className='btn btn-secondary my-2'>\n          Secondary action\n        </button>\n      </p>\n    </div>\n  </section>\n)\n\nexport default Header\n","// npm\nimport React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n// self\nimport Header from './header'\nimport './layout.scss'\n\nconst Layout = ({ container, children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' }\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className={container || ''}>{children}</div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","// npm\nimport React from 'react'\n\nconst Footer = ({ children }) => (\n  <footer className='container-fluid card mt-5'>\n    <div className='card-body row justify-content-center'>\n      {children || <p className='card-text'>Hello world, ciao!</p>}\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}