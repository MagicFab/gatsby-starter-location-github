{"version":3,"sources":["webpack:///./src/components/github-user.js","webpack:///./src/pages/page-2.js"],"names":["Object","lib","initSimpleImg","threshold","github_user","props","react_default","a","createElement","className","target","rel","href","login","SimpleImg","imgClassName","placeholder","src","databaseId","alt","name","role","bio","location","websiteUrl","react","Fragment","email","createdAt","company","starredRepositories","length","repositoriesContributedToCount","languages","isHireable","h","d","t","C","LANGUAGE_TYPE","PER_PAGE","LANGUAGE_BAR","whiteSpace","paddingBottom","overflowX","page_2_normalize","loc","deburr","trim","toLowerCase","sortFns","joined","b","na","nb","localeCompare","nRepos","page_2_SecondPage","SecondPage","_this","_Component","call","this","allLanguageColors","data","allLanguageColorsJson","edges","map","_ref","node","forEach","_ref2","fg","bg","allUsers","allDataJson","users","x","assign","_ref3","count","join","deburredName","deburredLocation","state","filter","onlyAvailable","last","sort","reverse","click","bind","assertThisInitialized_default","clickMore","clickAvailable","locationFilter","nameFilter","filtering","filtering2","filtering3","filtering4","changeOrder","changeOrder666","value","_ref4","console","log","setState","checked","_ref5","_ref6","_ref7","dataset","_ref8","key","_this2","ok","y","indexOf","render","_this3","availableLanguages","usersImp","slice","layout","index_es","id","i18n","to","lng","type","onClick","onChange","style","background","color","data-key","footer","Component","query","__webpack_exports__","default","c"],"mappings":"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","file":"component---src-pages-page-2-js-40dc1ef02050fb24a7ee.js","sourcesContent":["// npm\nimport React, { Fragment } from 'react'\nimport { SimpleImg, initSimpleImg } from 'react-simple-img'\n\n// run once at your root component or at file which calls `ReactDOM.render`\ninitSimpleImg({ threshold: 0.5 })\n\nconst GithubUser = props => {\n  return (\n    <div className='card mt-4'>\n      <a\n        target='_blank'\n        rel='noopener noreferrer'\n        href={`https://github.com/${props.login}`}\n      >\n        <SimpleImg\n          imgClassName='card-img-top'\n          placeholder='linear-gradient(rgb(30, 87, 153) 0%, rgb(125, 185, 232) 100%)'\n          src={`https://avatars3.githubusercontent.com/u/${props.databaseId}`}\n          alt={`Avatar de ${props.name || props.login}`}\n        />\n      </a>\n\n      <div className='card-body'>\n        {/* if props.name is falsy, show props.login */}\n        <h3 className='card-title'>{props.name || props.login}</h3>\n        <a\n          role='button'\n          className='w-100 btn btn-warning btn-sm'\n          target='_blank'\n          rel='noopener noreferrer'\n          href={`https://github.com/${props.login}`}\n        >\n          {props.login} @ GitHub\n        </a>\n        {/* if props.bio is truthy, show it in a paragraph */}\n        {props.bio && <p className='card-text'>{props.bio}</p>}\n        <dl className='row'>\n          <dt className='col-6 col-xl-4'>Location</dt>\n          <dd className='col-6 col-xl-8'>{props.location}</dd>\n\n          {props.websiteUrl && (\n            <Fragment>\n              <dt className='col-6 col-xl-4'>Site web</dt>\n              <dd className='col-6 col-xl-8'>{props.websiteUrl}</dd>\n            </Fragment>\n          )}\n\n          {props.email && (\n            <Fragment>\n              <dt className='col-6 col-xl-4'>Email</dt>\n              <dd className='col-6 col-xl-8'>{props.email}</dd>\n            </Fragment>\n          )}\n\n          <dt className='col-6 col-xl-4'>Créé</dt>\n          <dd className='col-6 col-xl-8'>{props.createdAt}</dd>\n\n          {props.company && (\n            <Fragment>\n              <dt className='col-6 col-xl-4'>Compagnie</dt>\n              <dd className='col-6 col-xl-8'>{props.company}</dd>\n            </Fragment>\n          )}\n\n          {/* Here, we're testing length > 0\n              since the number 0 is not falsy in this context.\n              Otherwise, 0 would be shown instead of nothing or the following span. */}\n          {props.starredRepositories &&\n            props.starredRepositories.length > 0 && (\n            <Fragment>\n              <dt className='col-6 col-xl-4'>Étoiles</dt>\n              {/* Here, we want it displayed, even if it's 0 although the previous test would prevent 0 */}\n              <dd className='col-6 col-xl-8'>\n                {props.starredRepositories.length} dépots\n              </dd>\n            </Fragment>\n          )}\n\n          {props.repositoriesContributedToCount && (\n            <Fragment>\n              <dt className='col-6 col-xl-4'>Contribs</dt>\n              <dd className='col-6 col-xl-8'>\n                {props.repositoriesContributedToCount} dépots\n              </dd>\n              {props.languages && (\n                <Fragment>\n                  <dt className='col-6 col-xl-4'>Langages</dt>\n                  <dd className='col-6 col-xl-8'>{props.languages}</dd>\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </dl>\n        {props.isHireable && (\n          <p className='card-text'>Disponible pour travailler</p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default GithubUser\n","// npm\nimport React, { Fragment, Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { withIntl, Link } from '../i18n'\nimport { graphql } from 'gatsby'\nimport { deburr } from 'lodash-es'\n\n// self\nimport Layout from '../components/layout'\nimport GithubUser from '../components/github-user'\nimport Footer from '../components/footer'\n\n// const LANGUAGE_TYPE = 'starLanguages'\nconst LANGUAGE_TYPE = 'repoLanguages'\nconst PER_PAGE = 12\n\n// see also:\n// https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar\n// https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-overflow-style\n// https://github.com/vitch/jScrollPane (find a React equivalent)\nconst LANGUAGE_BAR = {\n  whiteSpace: 'nowrap',\n  paddingBottom: '1rem',\n  overflowX: 'scroll'\n}\n\nconst normalize = loc => deburr((loc || '').trim()).toLowerCase()\n\nconst sortFns = {\n  joined: (a, b) => {\n    const na = a.createdAt\n    const nb = b.createdAt\n    if (na > nb) {\n      return 1\n    }\n    if (na < nb) {\n      return -1\n    }\n    return 0\n  },\n  name: (a, b) => (a.name || a.login).localeCompare(b.name || b.login),\n  nRepos: (a, b) => {\n    const na = a.repositoriesContributedToCount\n    const nb = b.repositoriesContributedToCount\n    if (na > nb) {\n      return 1\n    }\n    if (na < nb) {\n      return -1\n    }\n    return 0\n  }\n}\n\nclass SecondPage extends Component {\n  constructor (props) {\n    super(props)\n\n    this.allLanguageColors = {}\n    props.data.allLanguageColorsJson.edges\n      .map(({ node }) => node)\n      .forEach(({ name, fg, bg }) => {\n        this.allLanguageColors[name] = { bg, fg }\n      })\n\n    this.allUsers = props.data.allDataJson.edges[0].node.users\n      .map(x => ({\n        ...x,\n        languages:\n          x[LANGUAGE_TYPE] &&\n          x[LANGUAGE_TYPE].map(({ name, count }) => `${name} (${count})`).join(\n            ', '\n          )\n      }))\n      .map(x => ({\n        ...x,\n        deburredName: `${normalize(x.name)} ${normalize(x.login)}`,\n        deburredLocation: normalize(x.location)\n      }))\n\n    this.state = {\n      filter: false,\n      onlyAvailable: false,\n      last: PER_PAGE,\n      location: '',\n      deburredLocation: '',\n      name: '',\n      deburredName: '',\n      sort: 'joined',\n      reverse: true\n    }\n    this.click = this.click.bind(this)\n    this.clickMore = this.clickMore.bind(this)\n    this.clickAvailable = this.clickAvailable.bind(this)\n    this.locationFilter = this.locationFilter.bind(this)\n    this.nameFilter = this.nameFilter.bind(this)\n    this.filtering = this.filtering.bind(this)\n    this.filtering2 = this.filtering2.bind(this)\n    this.filtering3 = this.filtering3.bind(this)\n    this.filtering4 = this.filtering4.bind(this)\n    this.changeOrder = this.changeOrder.bind(this)\n    this.changeOrder666 = this.changeOrder666.bind(this)\n  }\n\n  changeOrder ({ target: { value } }) {\n    console.log('changeOrder', value)\n    if (value === this.state.sort) {\n      return\n    }\n    this.setState({\n      sort: value,\n      reverse: value === 'nRepos' || value === 'joined'\n    })\n  }\n\n  /*\n  changeOrder666 () {\n    console.log('changeOrder666')\n    this.setState({ reverse: !this.state.reverse })\n  }\n  */\n\n  changeOrder666 ({ target: { checked } }) {\n    console.log('changeOrder666', checked)\n    this.setState({ reverse: checked })\n  }\n\n  nameFilter ({ target: { value } }) {\n    this.setState({\n      name: value,\n      deburredName: normalize(value)\n    })\n  }\n\n  locationFilter ({ target: { value } }) {\n    this.setState({\n      location: value,\n      deburredLocation: normalize(value)\n    })\n  }\n\n  clickMore () {\n    this.setState({\n      last: this.state.last + PER_PAGE\n    })\n  }\n\n  clickAvailable () {\n    this.setState({ onlyAvailable: !this.state.onlyAvailable })\n  }\n\n  click ({ target: { dataset } }) {\n    if (!this.state.filter && !dataset.key) {\n      return\n    }\n    this.setState({\n      last: PER_PAGE,\n      filter: dataset && dataset.key !== this.state.filter && dataset.key\n    })\n  }\n\n  filtering (x) {\n    if (!this.state.filter) {\n      return true\n    }\n    let ok = false\n    if (!x[LANGUAGE_TYPE]) {\n      return false\n    }\n    x[LANGUAGE_TYPE].forEach(y => {\n      if (y.name === this.state.filter) {\n        ok = true\n      }\n    })\n    return ok\n  }\n\n  filtering2 (x) {\n    if (!this.state.onlyAvailable) {\n      return true\n    }\n    return x.isHireable\n  }\n\n  filtering3 (x) {\n    if (!this.state.deburredLocation) {\n      return true\n    }\n    return x.deburredLocation.indexOf(this.state.deburredLocation) !== -1\n  }\n\n  filtering4 (x) {\n    if (!this.state.deburredName) {\n      return true\n    }\n    return x.deburredName.indexOf(this.state.deburredName) !== -1\n  }\n\n  render () {\n    const availableLanguages = this.props.data.allDataJson.edges[0].node[\n      LANGUAGE_TYPE\n    ]\n\n    const usersImp = this.allUsers\n      .filter(this.filtering)\n      .filter(this.filtering2)\n      .filter(this.filtering3)\n      .filter(this.filtering4)\n      .sort(sortFns[this.state.sort])\n\n    const users = this.state.reverse\n      ? usersImp.reverse().slice(0, this.state.last)\n      : usersImp.slice(0, this.state.last)\n\n    return (\n      <Layout>\n        <div className='container'>\n          <h1>\n            <FormattedMessage id='welcome2' />\n          </h1>\n\n          <ul>\n            <li>\n              <Link to='/'>\n                <FormattedMessage id='goback' />\n              </Link>\n            </li>\n            <li>\n              <Link to='/' lng='fr'>\n                francais, accueil\n              </Link>\n            </li>\n            <li>\n              <Link to='/' lng='en'>\n                english, front\n              </Link>\n            </li>\n          </ul>\n\n          <div>\n            <p>\n              <button\n                className='btn btn-secondary'\n                type='button'\n                onClick={this.clickAvailable}\n              >\n                Dispo? {this.state.onlyAvailable ? 'OUI' : 'Peu importe'}\n              </button>\n            </p>\n            <label>\n              Tri:{' '}\n              <select onChange={this.changeOrder}>\n                <option value='joined'>Date d’inscription</option>\n                <option value='name'>Nom (ou login)</option>\n                <option value='nRepos'>Nombre de dépots</option>\n              </select>\n            </label>{' '}\n            <label>\n              Inverser l’ordre{' '}\n              <input\n                type='checkbox'\n                checked={this.state.reverse}\n                onChange={this.changeOrder666}\n              />\n            </label>\n            <ul className='list-inline' style={LANGUAGE_BAR}>\n              <li className='list-inline-item'>\n                <button\n                  className={`btn badge badge-primary${\n                    this.state.filter ? ' badge-pill' : ' active'\n                  }`}\n                  type='button'\n                  onClick={this.click}\n                >\n                  Tous\n                </button>\n              </li>\n              {availableLanguages.map(x => (\n                <li key={x.name} className='list-inline-item'>\n                  <button\n                    style={\n                      this.allLanguageColors[x.name]\n                        ? {\n                          background: this.allLanguageColors[x.name].bg,\n                          color: this.allLanguageColors[x.name].fg\n                        }\n                        : { background: '#fff', color: '#000' }\n                    }\n                    className={`btn badge${\n                      this.state.filter === x.name ? ' active' : ' badge-pill'\n                    }`}\n                    type='button'\n                    data-key={x.name}\n                    onClick={this.click}\n                  >\n                    {/* {x.name}&nbsp;({x.count}) */}\n                    {x.name}\n                  </button>\n                </li>\n              ))}\n            </ul>\n            <label>\n              Nom:{' '}\n              <input\n                type='text'\n                value={this.state.name}\n                onChange={this.nameFilter}\n              />\n            </label>\n            <br />\n            <label>\n              Lieu:{' '}\n              <input\n                type='text'\n                value={this.state.location}\n                onChange={this.locationFilter}\n              />\n            </label>\n            {this.state.deburredLocation}\n            <h3>\n              {users.length} utilisateurs affichés{' '}\n              <small>\n                sur {usersImp.length} sélectionnés\n                {this.allUsers.length !== usersImp.length && (\n                  <span>, {this.allUsers.length} en tout</span>\n                )}\n              </small>\n            </h3>\n            {users.length ? (\n              <Fragment>\n                <div className='row'>\n                  {users.map(x => (\n                    <div\n                      key={x.databaseId}\n                      className='col-sm-6 col-md-6 col-lg-4'\n                    >\n                      <GithubUser {...x} />\n                    </div>\n                  ))}\n                </div>\n\n                {usersImp.length > this.state.last && (\n                  <button\n                    onClick={this.clickMore}\n                    className='mt-4 w-100 btn btn-info'\n                    type='button'\n                  >\n                    Afficher plus de résultats\n                  </button>\n                )}\n              </Fragment>\n            ) : (\n              <div className='col'>\n                <p>Aucun résultat.</p>\n              </div>\n            )}\n          </div>\n        </div>\n        <Footer>\n          <p className='card-text'>Marvoulous</p>\n        </Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default withIntl(SecondPage)\n\nexport const query = graphql`\n  query {\n    allDataJson {\n      edges {\n        node {\n          meta {\n            name\n            version\n            processedAt\n          }\n          repoLanguages {\n            name\n            count\n          }\n          starLanguages {\n            name\n            count\n          }\n          users {\n            starLanguages {\n              name\n              count\n            }\n            repoLanguages {\n              name\n              count\n            }\n            name\n            login\n            databaseId\n            bio\n            company\n            email\n            location\n            createdAt\n            repositoriesContributedToCount\n            fetchedAt\n            isHireable\n            websiteUrl\n          }\n        }\n      }\n    }\n    allLanguageColorsJson {\n      edges {\n        node {\n          name\n          fg\n          bg\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}